// Grid columns
$gutter-width:  $spacing-lg;

@mixin columns($number, $fraction, $responsive) {
    @if $number == $fraction {
        width: calc(#{$responsive} * 100%);
    }
}

@mixin grid($number) {
    @include bidi(((float, left, right),));
    @include border-box;
    padding: $gutter-width;
    vertical-align: top;
    width: 100%;

    @media #{$mq-sm} {
        @include columns($number, 3/4, 1/2);
        @include columns($number, 2/3, 1/2);
        @include columns($number, 1/2, 1/2);
        @include columns($number, 1/3, 1/2);
        @include columns($number, 1/4, 1/2);
        @include columns($number, 1/6, 1/2);
        @include columns($number, 1/8, 1/2);
    }

    @media #{$mq-md} {
        @include columns($number, 3/4, 3/4);
        @include columns($number, 1/3, 1/3);
        @include columns($number, 1/4, 1/4);
        @include columns($number, 1/6, 1/3);
        @include columns($number, 1/8, 1/4);

        // Handle seperately because IE rounds up after two decimals
        @if $number == 2/3 {
            width: 66.66%;
        }
    }

    @media #{$mq-lg} {
        @if $number == 1/6 {
            width: 16.66%;
        }
    }

    @media #{$mq-xl} {
        @include columns($number, 1/8, 1/8);
        @include columns($number, 5/8, 5/8);
    }
}

@mixin overflow($number) {
    @media (min-width: #{$screen-sm}) and (max-width: #{$screen-md}) {
        @if (($number == 2/3) or ($number == -1/3)) {
            width: 100%;
        }
    }
    @media #{$mq-md} {
        float: none;
        position: absolute;
        left: calc((#{$number}) * 100%);
    }
}

@mixin overflow-sibling($number) {
    @media #{$mq-md} {
        margin-left: calc((#{$number}) * 100%);
    }
}
